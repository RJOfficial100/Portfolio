@model Portfolio.Models.Project
@using Portfolio.Models.Constants
@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Project</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyId, "CompanyId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CompanyId", null, htmlAttributes: new { @class = "form-control" })
                <input type="button" value="Add New Company" onclick="location.href='@Url.Action("Create", "Companies")'" />
                @Html.ValidationMessageFor(model => model.CompanyId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProjectDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProjectDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartMonth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.StartMonth, new SelectList(new Months().months, ""), new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartMonth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.StartYear, new SelectList(Enumerable.Range(2001, (DateTime.Now.Year - 2001) + 1), DateTime.Now.Year), new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="EndMonthDiv">
            @Html.LabelFor(model => model.EndMonth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.EndMonth, new SelectList(new Months().months, ""), new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndMonth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" id="EndYearDiv">
            @Html.LabelFor(model => model.EndYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.EndYear, new SelectList(Enumerable.Range(2001, (DateTime.Now.Year - 2001) + 1), DateTime.Now.Year), new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Current, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    <input type="checkbox" id="current_check_project" />
                    @Html.ValidationMessageFor(model => model.Current, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TechnologiesUsed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TechnologiesUsed, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TechnologiesUsed, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@section Scripts
{
    <script>
        $("#current_check_project").on("click", function () {
            var current = $('#current_check_project').is(':checked');
            //alert("this is me");
            if (current) {
                $("#EndYearDiv").hide();
                $("#EndMonthDiv").hide();
            }
            else {
                $("#EndYearDiv").show();
                $("#EndMonthDiv").show();
            }
        })
    </script>
}